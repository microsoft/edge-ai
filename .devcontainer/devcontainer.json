// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
	"name": "iac-edge-devcontainer",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/vscode/devcontainers/python:3",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/devcontainers/features/docker-in-docker:2": {},
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/azure-cli:1": {
			"extensions": "connectedk8s,k8s-extension,azure-iot-ops,amg,eventgrid"
		},
		"ghcr.io/devcontainers/features/dotnet:2": {},
		"ghcr.io/devcontainers/features/github-cli:1": {},
		"ghcr.io/devcontainers-contrib/features/pipx-package:1": {},
		"ghcr.io/devcontainers-extra/features/pre-commit:2": {},
		"ghcr.io/devcontainers/features/node:1": {},
		"ghcr.io/devcontainers/features/terraform:1": {
			"installTerraformDocs": true
		},
    	"ghcr.io/rio/features/k3d:1": {},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
 			// "version": "latest" uses https://dl.k8s.io/release/stable.txt which experiences outages during heavy load.
			// Update this back to "latest" or continue to upgrade the version periodically.
			"version": "1.33.2",
			"helm": "latest",
			"minikube": "none"
		},
		"ghcr.io/rio/features/k9s:1": {},
		"ghcr.io/devcontainers/features/powershell": {
			"pwsh": "latest"
		},
		"ghcr.io/devcontainers/features/rust:1": {},
		"ghcr.io/devcontainers/features/go:1": {}
	},
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				}
			},
			"extensions": [
				"charliermarsh.ruff",
				"darkriszty.markdown-table-prettify",
				"DavidAnson.vscode-markdownlint",
				"eamodio.gitlens",
				"EditorConfig.EditorConfig",
				"esbenp.prettier-vscode",
				"foxundermoon.shell-format",
				"GitHub.vscode-pull-request-github",
				"hashicorp.terraform",
				"ms-azuretools.vscode-azureterraform",
				"ms-azuretools.vscode-bicep",
				"ms-azuretools.vscode-docker",
				"ms-dotnettools.csdevkit",
				"ms-python.debugpy",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-vscode-remote.vscode-remote-extensionpack",
				"ms-vscode.azurecli",
				"streetsidesoftware.code-spell-checker",
				"streetsidesoftware.code-spell-checker-cspell-bundled-dictionaries",
				"timonwong.shellcheck",
				"yzhang.markdown-all-in-one",
				"ms-azuretools.vscode-azure-github-copilot",
				"ms-azure-devops.azure-pipelines",
				"ms-kubernetes-tools.vscode-kubernetes-tools",
				"ms-vscode.powershell",
				"github.vscode-github-actions",
				"bierner.markdown-mermaid",
				"rust-lang.rust-analyzer",
				"ms-dotnettools.vscode-dotnet-runtime",
				"ms-python.autopep8",
				"ms-azuretools.vscode-azurefunctions",
				"msazurermtools.azurerm-vscode-tools",
				"ms-azuretools.vscode-azureresourcegroups",
				"ms-python.black-formatter",
				"ms-dotnettools.csharp",
				"vadimcn.vscode-lldb",
				"ms-azuretools.vscode-containers",
				"dbaeumer.vscode-eslint",
				"tamasfe.even-better-toml",
				"ms-python.flake8",
				"golang.go",
				"redhat.vscode-yaml",
				"GitHub.copilot@prerelease",
				"GitHub.copilot-chat@prerelease"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8080],

	// Container environment variables
	"containerEnv": {
		"BROWSER": "code --new-window"
	},

	"onCreateCommand": {
		"pip": "pip install -r requirements.txt",
		"npm": "npm install -g npm && npm ci",
		"apt": "sudo apt update && sudo apt install -y shellcheck",
		"go": "go install mvdan.cc/sh/v3/cmd/shfmt@latest",
		"update-bashrc": "echo 'export PATH=\"${containerWorkspaceFolder}/scripts:$PATH\"' | sudo tee -a  ~/.bashrc"
	},

	// DONT USE 'postCreateCommand', it ruins your global .gitconfig https://github.com/devcontainers/cli/issues/787

	// Replace when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--init", "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",

	"postStartCommand": {
		"gcm": "bash -c 'set -e; ARCH=$(dpkg --print-architecture); echo \"Configuring Git authentication...\"; if [ \"$ARCH\" = \"arm64\" ]; then echo \"M1/ARM64 architecture detected - configuring Git to use VS Code authentication\"; git config --global credential.helper \"$HOME/.vscode-server/bin/*/node /usr/local/share/vscode-server/resources/app/extensions/git/dist/askpass.js\"; else echo \"Installing Git Credential Manager for $ARCH...\"; GCM_DEB_URL=$(curl -sSL https://api.github.com/repos/git-ecosystem/git-credential-manager/releases/latest | grep -o \"https://github.com.*linux_${ARCH}.*.deb\" | grep -v symbols | head -n 1); if [ -z \"$GCM_DEB_URL\" ]; then echo \"Could not find GCM package for $ARCH. Configuring VS Code auth helper instead.\"; git config --global credential.helper \"$HOME/.vscode-server/bin/*/node /usr/local/share/vscode-server/resources/app/extensions/git/dist/askpass.js\"; else echo \"Installing from $GCM_DEB_URL\"; curl -sSLO \"$GCM_DEB_URL\" && sudo dpkg -i gcm-linux_*.deb && rm -f gcm-linux_*.deb && git-credential-manager configure; fi; fi' && git config --global --add safe.directory ${containerWorkspaceFolder}"
	}
}
