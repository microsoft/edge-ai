# Bicep Documentation Compliance Check Template
#
# Purpose:
# This template validates that all Bicep documentation is properly maintained and up-to-date with the code.
# It enforces documentation standards and helps ensure consistent documentation across the codebase.
#
# Checks performed:
# 1. Verifies Bicep module documentation is current using custom documentation generator
#
# Note: Language path segment checking (en-us) is now performed by docs-validation-template.yml
# for all documentation across the repository.
#
# Usage:
# Include this template in your Azure DevOps pipeline to automate documentation compliance checks.
# Set breakBuild=true to enforce documentation standards by failing the build when issues are found.
---
parameters:
  # Dependencies for this job
  - name: dependsOn
    type: object
    default: []
  # Display name for the job
  - name: displayName
    type: string
    default: 'Bicep Documentation Check'
  # Condition for when this job should run
  - name: condition
    type: string
    default: 'succeeded()'
  # Whether to break the build on validation issues (true) or just show warnings (false)
  - name: breakBuild
    type: boolean
    default: false
  # Agent pool configuration
  - name: agentPool
    type: object
    default:
      name: 'ai-on-edge-managed-pool'
      vmImage: 'ubuntu-latest'

jobs:
  - job: DocsCheckBicep
    displayName: ${{ parameters.displayName }}
    dependsOn: ${{ parameters.dependsOn }}
    condition: ${{ parameters.condition }}
    pool: ${{ parameters.agentPool }}

    steps:

      # Checkout repo
      - checkout: self
        clean: true

      # For PR builds, checkout the source branch HEAD instead of merge ref
      - task: Bash@3
        displayName: 'Checkout PR source branch HEAD'
        condition: eq(variables['Build.Reason'], 'PullRequest')
        inputs:
          targetType: 'inline'
          script: |
            BRANCH_NAME=$(echo "$(System.PullRequest.SourceBranch)" | sed 's|^refs/heads/||')
            echo "Switching to PR source branch HEAD: $BRANCH_NAME"
            git checkout "$BRANCH_NAME"
            git log -1 --oneline

      # Set up PowerShell
      - task: PowerShell@2
        displayName: "Verify PowerShell Installation"
        inputs:
          targetType: 'inline'
          script: |
            Write-Host "PowerShell Version: $($PSVersionTable.PSVersion)"
            Write-Host "PowerShell Edition: $($PSVersionTable.PSEdition)"

      # Verify Azure CLI with Bicep extension
      - bash: |
          # Check if Azure CLI is installed
          if ! command -v az &>/dev/null; then
            echo "Azure CLI is not installed. Installing now..."
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          fi

          # Install/update Bicep extension
          echo "Installing/updating Bicep extension..."
          az bicep install
          az bicep version
        displayName: "Verify Azure CLI with Bicep Extension"
        condition: and( not(failed()), not(canceled()) )

      # Check for Bicep docs changes
      - bash: |
          # Run the bicep-docs-check.sh script to check for changes
          docs_changed=$(tail -n 1 <($(System.DefaultWorkingDirectory)/scripts/bicep-docs-check.sh))

          # Check if there are any changes in the Bicep documentation
          if [ "$docs_changed" = true ]; then
            echo "Updates are required for Bicep documentation."
            echo "Please go into the project's scripts directory, run the update-all-bicep-docs.sh script and commit changes."

            if [[ "$(echo ${{ parameters.breakBuild }} | tr '[:upper:]' '[:lower:]')" == "true" ]]; then
              issue_type="error"
            else
              issue_type="warning"
            fi

            echo "##vso[task.logissue type=$issue_type]Bicep auto-gen documentation needs to be updated. Please run the scripts/update-all-bicep-docs.sh script and commit the changes."
            exit 1
          else
            echo "No updates detected in the Bicep documentation."
          fi
        displayName: "Check for changes in Bicep docs"
        workingDirectory: $(System.DefaultWorkingDirectory)
        condition: and( not(failed()), not(canceled()) )
