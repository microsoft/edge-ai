# Harden-Runner Template for Azure DevOps
#
# Purpose:
# This template provides security hardening capabilities for Azure DevOps pipeline runners.
# It executes cross-platform PowerShell scripts to initialize security monitoring and hardening.
#
# Parameters:
# - enableEgressFilter: Enable network egress filtering
# - enableEndpointMonitoring: Enable endpoint monitoring for security events
# - allowedEndpoints: List of allowed network endpoints for egress filtering
#
# Usage Examples:
# - template: .azdo/templates/harden-runner-template.yml
#   parameters:
#     enableEgressFilter: true
#     enableEndpointMonitoring: true
#     allowedEndpoints: "github.com,registry-1.docker.io,*.azurecr.io"
#
# This template ensures consistent security hardening across Azure DevOps pipelines
# and provides runtime protection against supply chain attacks.
---
parameters:
  - name: enableEgressFilter
    type: boolean
    default: true
    displayName: 'Enable network egress filtering'
  - name: enableEndpointMonitoring
    type: boolean
    default: true
    displayName: 'Enable endpoint monitoring'
  - name: allowedEndpoints
    type: string
    default: 'github.com,registry-1.docker.io,*.azurecr.io,packages.microsoft.com'
    displayName: 'Allowed network endpoints (comma-separated)'
  - name: workingDirectory
    type: string
    default: '$(Build.SourcesDirectory)'
    displayName: 'Working directory for hardening setup'
  - name: continueOnError
    type: boolean
    default: false
    displayName: 'Continue pipeline on hardening errors'
  - name: dependsOn
    type: object
    default: []
    displayName: 'Jobs that this job depends on'
  - name: displayName
    type: string
    default: 'Security Hardening Setup'
    displayName: 'Display name for this job'
  - name: condition
    type: string
    default: 'succeeded()'
    displayName: 'Condition for running this job'
  - name: agentPool
    type: object
    default:
      name: 'ai-on-edge-managed-pool'
      vmImage: 'ubuntu-latest'
    displayName: 'Agent pool configuration'

jobs:
  - job: SecurityHardening
    dependsOn: ${{ parameters.dependsOn }}
    displayName: ${{ parameters.displayName }}
    condition: ${{ parameters.condition }}
    pool: ${{ parameters.agentPool }}
    steps:
      - task: PowerShell@2
        displayName: 'Initialize Security Hardening'
        continueOnError: ${{ parameters.continueOnError }}
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/scripts/security/Initialize-HardenRunner.ps1'
          arguments: >
            -EnableEgressFilter:$${{ parameters.enableEgressFilter }}
            -EnableEndpointMonitoring:$${{ parameters.enableEndpointMonitoring }}
            -AllowedEndpoints "${{ parameters.allowedEndpoints }}"
            -Verbose
          workingDirectory: '${{ parameters.workingDirectory }}'
          pwsh: true

      - task: PowerShell@2
        displayName: 'Monitor Egress Traffic'
        condition: and(always(), ${{ parameters.enableEgressFilter }})
        inputs:
          targetType: 'filePath'
          filePath: '$(Build.SourcesDirectory)/scripts/security/Monitor-EgressTraffic.ps1'
          arguments: >
            -AllowedEndpoints "${{ parameters.allowedEndpoints }}"
            -OutputPath "$(Build.ArtifactStagingDirectory)/egress-monitoring.json"
            -Verbose
          workingDirectory: '${{ parameters.workingDirectory }}'
          pwsh: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Security Monitoring Results'
        condition: always()
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'security-hardening-results'
          includeRootFolder: false
          parallel: true
