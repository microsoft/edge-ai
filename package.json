{
	"scripts": {
		"mdlint": "markdownlint --config .markdownlint.json --ignore .copilot-tracking --ignore .github --ignore node_modules --ignore venv \"**/*.md\"; markdown-table-formatter --check \"{.github,**}/*.md\"",
		"mdlint-fix": "markdownlint --config .markdownlint.json --ignore .copilot-tracking --ignore .github --ignore node_modules --ignore venv --fix \"**/*.md\"; markdown-table-formatter \"{.github,**}/*.md\"",
		"link-check": "mega-linter-runner --env \"'ENABLE_LINTERS=MARKDOWN_MARKDOWN_LINK_CHECK'\" ",
		"cspell": "mega-linter-runner  --env 'ENABLE_LINTERS=SPELL_CSPELL'",
		"yaml": "mega-linter-runner  --env 'ENABLE_LINTERS=YAML_YAMLLINT'",
		"terrascan": "mega-linter-runner  --env \"'ENABLE_LINTERS=TERRAFORM_TERRASCAN,TERRAFORM_TERRASCAN_CONFIG_FILE:.terrascan.toml'\" ",
		"lint": "mega-linter-runner",
		"lint-fix": "mega-linter-runner --fix",
		"tf-docs": "./scripts/update-all-terraform-docs.sh",
		"bicep-docs": "./scripts/update-all-bicep-docs.sh",
		"tflint-fix": "mega-linter-runner --env \"'ENABLE_LINTERS=TERRAFORM_TERRAFORM_FMT,TERRAFORM_TFLINT'\" --fix",
		"tf-validate": "bash -c 'set -e; trap \"echo; echo Interrupted.; exit 130\" INT; source ./scripts/az-sub-init.sh && find blueprints src -name \"terraform\" -type d 2>/dev/null | while read dir; do if compgen -G \"$dir/*.tf\" > /dev/null; then echo \"Processing $dir...\"; pushd \"$dir\"; terraform init -upgrade; terraform validate; terraform fmt -recursive; popd; else echo \"Skipping $dir (no .tf files found)\"; fi; done'",
		"lint-devcontainer": "mega-linter-runner --env \"'BICEP_BICEP_LINTER_ARGUMENTS=--outdir ./megalinter-reports'\"",
		"lint-fix-devcontainer": "mega-linter-runner --env \"'BICEP_BICEP_LINTER_ARGUMENTS=--outdir ./megalinter-reports'\" --fix",
		"format-tables": "markdown-table-formatter \"{.github,node_modules,**}/*.md\"",
		"format-tables-check": "markdown-table-formatter --check \"{.github,node)modules,**}/*.md\"",
		"checkov-changes": "pwsh -Command \"& $PWD/scripts/Detect-Folder-Changes.ps1 | & $PWD/scripts/Run-Checkov.ps1 -OutputFolder './checkov-results' -OutputFile 'code-analysis.xml'\"",
		"checkov-all": "pwsh -Command \"& $PWD/scripts/Detect-Folder-Changes.ps1 -IncludeAllFolders | & $PWD/scripts/Run-Checkov.ps1 -OutputFolder './checkov-results' -OutputFile 'code-analysis.xml'\"",
		"link-lang-check": "python ./scripts/link-lang-check.py",
		"link-lang-fix": "python ./scripts/link-lang-check.py -f",
		"generate-sidebar": "pwsh -File ./scripts/Generate-DocsSidebar.ps1 -DocsPath ./docs -SrcPath ./src -SidebarFile _sidebar.md -Verbose",
		"docs": "pwsh -File ./scripts/Serve-Docs.ps1 -Open",
		"docs:training": "pwsh -File ./scripts/Serve-Docs.ps1 -Open -StartPage praxisworx/README"
	},
	"dependencies": {
		"markdown-table-formatter": "1.6.1",
		"markdownlint": "0.38.0",
		"markdownlint-cli": "^0.45.0",
		"mega-linter-runner": "^8.1.0"
	},
	"devDependencies": {
		"docsify-cli": "4.4.4"
	},
	"resolutions": {
		"marked": "^4.0.10",
		"got": "^11.8.5"
	},
	"overrides": {
		"marked": "^4.0.10",
		"got": "^11.8.5"
	}
}
