{
    "json.schemaDownload.enable": true,

    "files.eol": "\n",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,

    "diffEditor.ignoreTrimWhitespace": false,

    "editor.insertSpaces": true,

    "markdownlint.configFile": ".markdownlint.json",
    "markdownlint.lintWorkspaceGlobs": [
        "**/*.{md,mkd,mdwn,mdown,markdown,markdn,mdtxt,mdtext,workbook}",
        "!**/.copilot-tracking/**",
        "!**/*.code-search",
        "!**/bower_components",
        "!**/node_modules",
        "!**/.git",
        "!**/vendor"
    ],

    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.wordWrap": "on",
        "editor.detectIndentation": false,
    },

    "[terraform-vars]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
        "editor.codeActionsOnSave": {
            "source.formatAll.terraform": "explicit"
        },
    },

    "[terraform-test]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
    },

    "[terraform]": {
        "editor.defaultFormatter": "hashicorp.terraform",
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
        "editor.codeActionsOnSave": {
            "source.formatAll.terraform": "explicit"
        },
    },

    "[bicep]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
    },

    "[shellscript]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 2,
    },

    "[csharp]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 4,
    },

    "[python]": {
        "editor.formatOnSave": true,
        "editor.tabSize": 4,
    },

    "yaml.schemas": {
        "https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/master/service-schema.json": "*-pipelines.yml",
        "https://squidfunk.github.io/mkdocs-material/schema.json": "mkdocs.yml",
    },
    "yaml.customTags": [
        "!ENV scalar",
        "!ENV sequence",
        "!relative scalar",
        "tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg",
        "tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji",
        "tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format",
        "tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping"
    ],
    "github.copilot.chat.codeGeneration.useInstructionFiles": true,
    "github.copilot.chat.agent.thinkingTool": true,
    "github.copilot.chat.codesearch.enabled": true,
    "github.copilot.chat.commitMessageGeneration.instructions": [
        {
            "text": "Use Conventional Commit Messages. All changes MUST be in present tense."
        },
        {
            "text": "Types MUST be: feat, fix, refactor, perf, style, test, docs, build, ops, chore"
        },
        {
            "text": "Scope MUST be: (prompts), (instructions), (settings), (cloud), (edge), (application), (tools), (resource-group), (security-identity), (observability), (data), (fabric), (messaging), (vm-host), (cncf-cluster), (iot-ops), (observability), (messaging), (blueprints), (terraform), (bicep), (scripts), (adrs), (build)."
        },
        {
            "text": "Description MUST be short and LESS THAN 100 bytes. e.g. 'feat: update logic with new feature', 'chore: cleaned up and moved code from A to B', 'feat(iot-ops): add parameters to take name instead of id'"
        },
        {
            "text": "OPTIONAL ONLY for larger changes: Body starts with a blank line then is a summarized bulleted list (0-3 AT MOST), of changes that's LESS THAN 300 bytes."
        },
        {
            "text": "Footer MUST start with a blank line and then have an emoji that represents the change then ' - Generated by Copilot'"
        },
    ]
}
