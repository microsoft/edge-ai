# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

---

schedules:
  - cron: '0 0 * * *'
    displayName: Daily midnight dependency scan
    branches:
      include:
        - main

# variables:
#   isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

pool:
  vmImage: ubuntu-latest

stages:
  - stage: DepScan
    displayName: Dependency Scanning
    # dependsOn: string | [ string ]
    # condition: eq(variables.isMain, true)
    # pool: string | pool
    # variables: { string: string } | [ variable | variableReference ]
    jobs:
      # Run MegaLinter to detect linting and security issues
      - job: dep_scanner
        pool:
          vmImage: ubuntu-latest
        steps:
          # Checkout repo
          - checkout: self

          # Install Latest Node
          - task: UseNode@1
            inputs:
              version: '22.x'
            displayName: 'Install Node.js'

          # Run NPM Install
          - script: |
              npm install
            displayName: 'npm install'

          # - script: |
          #     npm run build
          #   displayName: 'npm build'

          # - script: |
          #     npm test
          #   displayname: 'npm test'

          # Dependency Analysis Scan
          - task: dependency-check-build-task@6
            displayName: Dependency Checker
            continueOnError: true
            inputs:
              projectName: 'IaC4Edge'
              scanPath: '**/*'
              format: 'HTML, JSON, JUNIT'
              failOnCVSS: '8'

          # Publish Dependency Scan Results
          - task: PublishTestResults@2
            displayName: "Publish Dependency Checks Tests Results"
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '$(Agent.BuildDirectory)/TestResults/dependency-check/*junit.xml'
              mergeTestResults: true
